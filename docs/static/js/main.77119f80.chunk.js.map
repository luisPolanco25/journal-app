{"version":3,"sources":["types/types.js","reducers/notesReducer.js","reducers/uiReducers.js","store/store.js","reducers/authReducer.js","hooks/useForm.js","firebase/firebase-config.js","components/actions/ui.js","helpers/fileUpload.js","cloudinary/cloudinaryUrl.js","helpers/loadNotes.js","components/actions/notes.js","components/actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","context/MobileScreenContext.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/loading/LoadingScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","notes","active","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","value","firebaseConfig","apiKey","process","REACT_APP_APIKEY","authDomain","REACT_APP_AUTHDOMAIN","projectId","REACT_APP_PROJECTID","storageBucket","REACT_APP_STORAGEBUCKET","messagingSenderId","REACT_APP_MESSAGINGSENDERID","appId","REACT_APP_APPID","firebase","initializeApp","db","firestore","googleAuthProvider","GoogleAuthProvider","setError","err","finishLoading","fileUpload","file","a","formData","FormData","append","fetch","method","body","response","ok","json","cloudResponse","secure_url","loadNotes","collection","get","noteSnap","forEach","snapChild","push","data","activeNote","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNotes","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","catch","message","logout","LoginScreen","useDispatch","useSelector","formValues","className","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","password2","isFormValid","validator","isEmpty","isEmail","length","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","path","component","MobileScreenContext","createContext","NotesAppBar","useContext","screenWidth","setActivateMobileStyles","noteDate","moment","date","format","style","display","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","startDeleting","NothingSelected","JournalEntry","tabIndex","backgroundSize","backgroundImage","substring","JournalEntries","key","Sidebar","activateMobileStyles","signOut","newNote","Date","getTime","add","documentReference","console","log","JournalScreen","LoadingScreen","PrivateRoute","Component","isLoggedIn","rest","props","PublicRoute","AppRouter","checking","setChecking","setIsLoggedIn","onAuthStateChanged","exact","JournalApp","innerWidth","setScreenWidth","updateWidth","addEventListener","removeEventListener","Provider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.77119f80.chunk.js","sourcesContent":["\r\nexport const types = {\r\n    login: '[Auth] login',\r\n    logout: '[Auth] logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finish Loading',\r\n\r\n    notesAddNew: '[Notes] New Note',\r\n    notesActive: '[Active] Set Active Note',\r\n    notesLoad: '[Notes] Load Notes',\r\n    notesUpdated: '[Notes] Update Saved Notes',\r\n    notesFileUrl: '[Notes] Update Image Url',\r\n    notesDelete: '[Notes] Delete Notes',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            } \r\n    \r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }   \r\n            \r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n        \r\n        case types.notesUpdated: \r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(note =>\r\n                     (note.id === action.payload.id)\r\n                     ? action.payload.note\r\n                     : note\r\n                )\r\n            }\r\n        \r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                notes: [],\r\n                active: null\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }        \r\n            \r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }        \r\n        \r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducers';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer,\r\n});\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import { types } from '../types/types';\r\n\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        \r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            };\r\n            \r\n        case types.logout:\r\n            return {};\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues(newFormState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value,\r\n        });\r\n    }\r\n    \r\n    return [values, handleInputChange, reset];\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_APIKEY,\r\n    authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECTID,\r\n    storageBucket: process.env.REACT_APP_STORAGEBUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import { types } from \"../../types/types\";\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError,\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n});","import { cloudinaryUrl } from '../cloudinary/cloudinaryUrl';\r\n\r\n\r\nexport const fileUpload = async(file) => {\r\n\r\n    const cloudUrl = cloudinaryUrl;\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'journal-app');\r\n    formData.append('file', file);\r\n    \r\n\r\n    try {\r\n\r\n        const response = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if (response.ok) {\r\n            const cloudResponse = await response.json();\r\n            return cloudResponse.secure_url;\r\n        } else {\r\n            return null;\r\n        }\r\n        \r\n        \r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n\r\n}","export const cloudinaryUrl = 'https://api.cloudinary.com/v1_1/desescti8/upload';","import { db } from \"../firebase/firebase-config\"\r\n\r\nexport const loadNotes = async(uid) => {\r\n\r\n    const noteSnap = await db.collection(`${uid}/journal/notes`).get();\r\n\r\n    const notes = [];\r\n\r\n    noteSnap.forEach(snapChild => {\r\n        notes.push({\r\n            id: snapChild.id,\r\n            ...snapChild.data()\r\n        })\r\n    })\r\n\r\n    return notes;\r\n}","import Swal from 'sweetalert2';\r\nimport { db } from '../../firebase/firebase-config';\r\nimport { fileUpload } from '../../helpers/fileUpload';\r\nimport { loadNotes } from '../../helpers/loadNotes';\r\nimport { types } from '../../types/types';\r\n\r\nexport const startNewNote = () => {\r\n    return async(dispatch, getState) => {\r\n        const {uid} = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        try {\r\n\r\n            const documentReference = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n    \r\n            dispatch(activeNote(documentReference.id, newNote));    \r\n            dispatch(addNewNote(documentReference.id, newNote));    \r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id, \r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async(dispatch) => {\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNotes = (note) => {\r\n    return async(dispatch, getState) => {\r\n        \r\n        const {uid} = getState().auth;\r\n\r\n        if (!note.url) {\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = {...note};\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n        \r\n        dispatch(refreshNote(note.id, noteToFirestore));\r\n        \r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\nexport const startUploading = (file) => {\r\n    return async(dispatch, getState) => {\r\n        const {active:activeNote} = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n            \r\n        });\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch(startSaveNotes(activeNote))\r\n        \r\n\r\n        Swal.close();\r\n        \r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async(dispatch, getState) => {\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch(deleteNote(id));\r\n\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const notesLogout = () => ({\r\n    type: types.notesLogoutCleaning,\r\n})","import Swal from 'sweetalert2';\r\nimport { types } from '../../types/types';\r\nimport {firebase, googleAuthProvider} from '../../firebase/firebase-config';\r\nimport { finishLoading, startLoading } from './ui';\r\nimport { notesLogout } from './notes';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch(startLoading());\r\n        \r\n            return firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({user}) => {\r\n                dispatch(login(user.uid, user.displayName));\r\n                \r\n                dispatch(finishLoading());\r\n            })\r\n            .catch((err) => {\r\n                dispatch(finishLoading());\r\n                Swal.fire('Error', err.message, 'error');\r\n            });\r\n    \r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then( async({user} ) => {\r\n                \r\n                await user.updateProfile({displayName: name});\r\n                \r\n                dispatch(login(user.uid, user.displayName))\r\n                    \r\n            })\r\n            .catch((err) => {\r\n                Swal.fire('Error', err.message, 'error');\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({user}) => {\r\n                dispatch(login(user.uid, user.displayName))\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const login = (uid, displayName) => ({\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async(dispatch) => {\r\n\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch(notesLogout());\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../actions/auth';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const loading = useSelector(state => state.ui.loading)\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: 'any@email.com',\r\n        password: 'anyPassw0rd'\r\n    });\r\n    \r\n    const {email, password} = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLoginEmailPassword(email, password));\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n\r\n    return (\r\n        <> \r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form \r\n                onSubmit={handleLogin}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    className=\"btn btn-primary btn-block\"\r\n                    type=\"submit\"\r\n                    disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n\r\n                    <p>Login with social networks</p>\r\n                    <div className=\"google-btn\" onClick={handleGoogleLogin}>\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img \r\n                                className=\"google-icon\" \r\n                                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" \r\n                                alt=\"google button\" \r\n                            />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <Link \r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport validator from 'validator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeError, setError } from '../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const state = useSelector(state => state.ui);\r\n\r\n    const {msgError} = state; \r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: 'AnyName',\r\n        email: 'any@email.com',\r\n        password: 'anyPassw0rd',\r\n        password2: 'anyPassw0rd'\r\n    })\r\n    \r\n    const {name, email, password, password2} = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (isFormValid()) {\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name));\r\n        } \r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if (validator.isEmpty(name)) {\r\n            dispatch(setError('Name is required'));\r\n            return false;\r\n        } else if (!validator.isEmail(email)) {\r\n            dispatch(setError('Email is not valid'));\r\n            return false;\r\n        } else if (password !== password2 || password.length < 5) {\r\n            dispatch(setError('Passwords should be at least 6 characters and match'));\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError());\r\n        return true;\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form \r\n                onSubmit={handleRegister}\r\n                className='animate__animated animate__fadeIn animate__faster'\r\n            >\r\n\r\n                {\r\n                    msgError && \r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            {msgError}\r\n                        </div>\r\n                    )\r\n                }\r\n                \r\n            <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                    type=\"submit\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link \r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n            <Switch>\r\n\r\n                <Route \r\n                    path=\"/auth/login\"\r\n                    component={LoginScreen}\r\n                />\r\n\r\n                <Route \r\n                    path=\"/auth/register\"\r\n                    component={RegisterScreen}\r\n                />\r\n\r\n                <Redirect to=\"/auth/login\" />\r\n\r\n            </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { createContext } from 'react';\r\n\r\nexport const MobileScreenContext = createContext();","import React, { useContext } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNotes, startUploading } from '../actions/notes';\r\nimport moment from 'moment';\r\nimport { MobileScreenContext } from '../../context/MobileScreenContext';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const {screenWidth, setActivateMobileStyles} = useContext(MobileScreenContext);\r\n    \r\n    const dispatch = useDispatch();\r\n    const {active:note} = useSelector(state => state.notes)\r\n    const noteDate = moment(note.date);\r\n\r\n    const handleOpenSidebar = () => {\r\n        if (screenWidth <= 645) {\r\n            setActivateMobileStyles(true);\r\n        }\r\n    }\r\n    \r\n    const handleSave = () => {\r\n        dispatch(startSaveNotes(note))\r\n    }\r\n\r\n    const handlePictureUpload = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = ({target}) => {\r\n        const file = target.files[0];\r\n\r\n        if (file) {\r\n            dispatch(startUploading(file));\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <div>\r\n                <i \r\n                    className=\"fas fa-arrow-circle-left\"\r\n                    onClick={handleOpenSidebar}\r\n                >\r\n                </i>\r\n                <span>{`${noteDate.format('MMMM Do, YYYY')}`}</span>\r\n            </div>\r\n            <input \r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{display: 'none'}}\r\n                onChange={handleFileChange}\r\n            />\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handlePictureUpload}\r\n                >\r\n                    Picture\r\n                </button>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { MobileScreenContext } from '../../context/MobileScreenContext';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { activeNote, startDeleting } from '../actions/notes';\r\nimport { NotesAppBar } from './NotesAppBar';\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const {active:note} = useSelector(state => state.notes)\r\n    const dispatch = useDispatch();\r\n\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n\r\n    const {body, title, id} = formValues;\r\n\r\n    const activeId = useRef(note.id)\r\n\r\n    const {screenWidth, setActivateMobileStyles} = useContext(MobileScreenContext);\r\n\r\n    useEffect(() => {\r\n\r\n        if (note.id !== activeId.current) {\r\n            reset(note);\r\n            activeId.current = note.id;\r\n        }\r\n\r\n    }, [note, reset])\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(activeNote(formValues.id, {...formValues}));\r\n        \r\n    }, [formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleting(id));\r\n\r\n        if (screenWidth <= 645) {\r\n            setActivateMobileStyles(true);\r\n        }\r\n    }\r\n    \r\n    \r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"An awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                >\r\n                </textarea>\r\n                {\r\n                    (note.url) \r\n                    &&\r\n                    <div className=\"notes__image\">\r\n                        <img \r\n                            src={note.url}\r\n                            alt={`${title} pic`}\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}\r\n            >\r\n                Delete\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                or create an entry!\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../actions/notes';\r\nimport { MobileScreenContext } from '../../context/MobileScreenContext';\r\n\r\nexport const JournalEntry = ({id, date, title, body, url}) => {\r\n    \r\n    const noteDate = moment(date);\r\n    const dispatch = useDispatch();\r\n    const {screenWidth, setActivateMobileStyles} = useContext(MobileScreenContext);\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch(activeNote(id, {date, title, body, url}));\r\n\r\n        if (screenWidth <= 645) {\r\n            setActivateMobileStyles(false);\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__backInRight\"\r\n            onClick={handleEntryClick}\r\n            tabIndex=\"1\"\r\n        >\r\n\r\n            {\r\n\r\n                (url) \r\n                &&\r\n                <div \r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`,\r\n                    }}\r\n                >\r\n                </div>\r\n\r\n            }\r\n            \r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {`${body.substring(0, 40)}${(body) ? '...' : ''}`}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('MMMM Do')}</span>\r\n                <h4>{noteDate.format('YYYY')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const {notes} = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__entries\"> \r\n            {\r\n                notes.map(note => (\r\n                    <JournalEntry \r\n                        key={note.id} \r\n                        {...note}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { MobileScreenContext } from '../../context/MobileScreenContext';\r\nimport { startLogout } from '../actions/auth';\r\nimport { startNewNote } from '../actions/notes';\r\nimport { JournalEntries } from './JournalEntries';\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const state = useSelector(state => state.auth);\r\n    const {screenWidth, activateMobileStyles, setActivateMobileStyles} = useContext(MobileScreenContext);\r\n\r\n    const {name} = state;\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());   \r\n    }\r\n    \r\n    const handleAddEntry = () => {\r\n        dispatch(startNewNote());\r\n\r\n        if (screenWidth <= 645) {\r\n            setActivateMobileStyles(false);\r\n        }\r\n    } \r\n\r\n\r\n    return (\r\n        <aside \r\n            className=\"journal__sidebar\"\r\n            style={(!activateMobileStyles && screenWidth <= 645) ? {display: 'none'} : null}\r\n        >\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name}</span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={handleAddEntry}\r\n                tabIndex=\"1\"\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { MobileScreenContext } from '../../context/MobileScreenContext';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { NothingSelected } from './NothingSelected';\r\nimport { Sidebar } from './Sidebar';\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {screenWidth, activateMobileStyles} = useContext(MobileScreenContext);\r\n    const {active} = useSelector(state => state.notes);\r\n    \r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            <Sidebar />\r\n\r\n            <main\r\n                style={(activateMobileStyles && screenWidth <= 645) ? {display: 'none'} : null}\r\n            >\r\n\r\n                {\r\n                    (active)\r\n                        ? \r\n                            <NoteScreen />\r\n                        : \r\n                            <NothingSelected />\r\n \r\n                }\r\n                \r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const LoadingScreen = () => {\r\n    return (\r\n        <>\r\n            <div id=\"_loading-container\">\r\n                <div id=\"_box\">\r\n                    <div id=\"_loading\"><div></div><div></div><div></div><div></div></div>\r\n                    <h1 id=\"_loading-text\">Loading...</h1>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    component: Component,\r\n     isLoggedIn,\r\n      ...rest\r\n}) => {\r\n\r\n    \r\n    return (\r\n        <Route {...rest} \r\n            component={(props) => (\r\n                (isLoggedIn)\r\n                ? (<Component {...props} />)\r\n                : (<Redirect to=\"/auth/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    component: Component,\r\n     isLoggedIn,\r\n      ...rest\r\n}) => {\r\n\r\n    \r\n    return (\r\n        <Route {...rest} \r\n            component={(props) => (\r\n                (!isLoggedIn)\r\n                ? (<Component {...props} />)\r\n                : (<Redirect to=\"/\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPublicRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n  } from 'react-router-dom';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport {firebase} from '../firebase/firebase-config';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../components/actions/auth';\r\nimport { LoadingScreen } from '../components/loading/LoadingScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport {startLoadingNotes} from '../components/actions/notes'\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged( async(user) => {\r\n\r\n            if (user?.uid) {\r\n                dispatch(login(user.uid, user.displayName));\r\n                setIsLoggedIn(true);\r\n                \r\n                dispatch(startLoadingNotes(user.uid));\r\n            } else {\r\n                setIsLoggedIn(false);\r\n            }\r\n\r\n            setChecking(false);\r\n\r\n        });\r\n    }, [dispatch, setChecking, setIsLoggedIn])\r\n    \r\n    if (checking) {\r\n        return (\r\n            <LoadingScreen />\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        path=\"/auth\"\r\n                        component={AuthRouter}\r\n                        isLoggedIn={isLoggedIn}\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        exact path=\"/\" \r\n                        component={JournalScreen}\r\n                        isLoggedIn={isLoggedIn}\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { MobileScreenContext } from './context/MobileScreenContext';\r\n\r\nexport const JournalApp = () => {\r\n\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n    const [activateMobileStyles, setActivateMobileStyles] = useState(true);\r\n    const updateWidth = () => {\r\n        setScreenWidth(window.innerWidth);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateWidth);\r\n        \r\n        return () => window.removeEventListener(\"resize\", updateWidth);\r\n    }, [])\r\n    \r\n    return (\r\n        <Provider store={ store }>\r\n            <MobileScreenContext.Provider value={{screenWidth, activateMobileStyles, setActivateMobileStyles}}>\r\n                <AppRouter />\r\n            </MobileScreenContext.Provider>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}